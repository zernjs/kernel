name: CI/CD Pipeline
on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

permissions:
  contents: read

jobs:
  lint_typecheck:
    name: Lint & TypeCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: '20.x', cache: 'pnpm' }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint
      - run: pnpm run type-check

  test_coverage:
    name: Test & Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: '20.x', cache: 'pnpm' }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run test:coverage
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            ./coverage/
            !./coverage/tmp/

  security:
    name: Security (Audit + SBOM)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: '20.x', cache: 'pnpm' }
      - run: pnpm install --frozen-lockfile

      - name: Audit (high+)
        run: pnpm run audit:ci

      - name: Generate SBOM (Syft via Docker)
        run: docker run --rm -v ${PWD}:/work -w /work anchore/syft:latest dir:. -o cyclonedx-json=sbom.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.json

  vulnerability_scan:
    name: OSV Scanner (Vulnerability Detection)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Run OSV Scanner
        uses: google/osv-scanner-action/osv-scanner-action@v1.8.5
        continue-on-error: true
        with:
          scan-args: |-
            --lockfile=pnpm-lock.yaml
            --format=sarif
            --output=osv-results.sarif

      - name: Upload OSV Scanner results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: osv-results.sarif
          category: osv-scanner

  build_tarball:
    name: Build package tarball
    runs-on: ubuntu-latest
    needs: [lint_typecheck, test_coverage, security]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: '20.x', cache: 'pnpm' }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: |
          mkdir -p artifacts
          npm pack --pack-destination ./artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: package-tarball
          path: artifacts/*.tgz
          if-no-files-found: error
